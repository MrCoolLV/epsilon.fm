/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1/system/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Login For Access Token */
        post: operations["login_for_access_token_v1_system_auth_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/system/auth/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Refresh Access Token */
        post: operations["refresh_access_token_v1_system_auth_refresh_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/system/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Logout */
        post: operations["logout_v1_system_auth_logout_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/artists": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Endpoint
         * @description Read multiple Artist rows from the database with a limit and an offset.
         */
        get: operations["endpoint_v1_artists_get"];
        put?: never;
        /**
         * Endpoint
         * @description Create a new Artist row in the database.
         */
        post: operations["endpoint_v1_artists_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/artists/{org_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Artist */
        get: operations["read_artist_v1_artists__org_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/artists/{org_id}/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Endpoint
         * @description Read a single Artist row from the database by its primary keys: ['org_id', 'id'].
         */
        get: operations["endpoint_v1_artists__org_id___id__get"];
        put?: never;
        post?: never;
        /**
         * Endpoint
         * @description Soft delete a Artist row from the database by its primary keys: ['org_id', 'id'].
         */
        delete: operations["endpoint_v1_artists__org_id___id__delete"];
        options?: never;
        head?: never;
        /**
         * Endpoint
         * @description Update an existing Artist row in the database by its primary keys: ['org_id', 'id'].
         */
        patch: operations["endpoint_v1_artists__org_id___id__patch"];
        trace?: never;
    };
    "/v1/tracks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Endpoint
         * @description Read multiple Track rows from the database with a limit and an offset.
         */
        get: operations["endpoint_v1_tracks_get"];
        put?: never;
        /**
         * Endpoint
         * @description Create a new Track row in the database.
         */
        post: operations["endpoint_v1_tracks_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/tracks/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Endpoint
         * @description Read a single Track row from the database by its primary keys: ['id'].
         */
        get: operations["endpoint_v1_tracks__id__get"];
        put?: never;
        post?: never;
        /**
         * Endpoint
         * @description Soft delete a Track row from the database by its primary keys: ['id'].
         */
        delete: operations["endpoint_v1_tracks__id__delete"];
        options?: never;
        head?: never;
        /**
         * Endpoint
         * @description Update an existing Track row in the database by its primary keys: ['id'].
         */
        patch: operations["endpoint_v1_tracks__id__patch"];
        trace?: never;
    };
    "/v1/genres": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Endpoint
         * @description Read multiple Genre rows from the database with a limit and an offset.
         */
        get: operations["endpoint_v1_genres_get"];
        put?: never;
        /**
         * Endpoint
         * @description Create a new Genre row in the database.
         */
        post: operations["endpoint_v1_genres_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/genres/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Endpoint
         * @description Read a single Genre row from the database by its primary keys: ['id'].
         */
        get: operations["endpoint_v1_genres__id__get"];
        put?: never;
        post?: never;
        /**
         * Endpoint
         * @description Soft delete a Genre row from the database by its primary keys: ['id'].
         */
        delete: operations["endpoint_v1_genres__id__delete"];
        options?: never;
        head?: never;
        /**
         * Endpoint
         * @description Update an existing Genre row in the database by its primary keys: ['id'].
         */
        patch: operations["endpoint_v1_genres__id__patch"];
        trace?: never;
    };
    "/v1/subgenres": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Endpoint
         * @description Read multiple Subgenre rows from the database with a limit and an offset.
         */
        get: operations["endpoint_v1_subgenres_get"];
        put?: never;
        /**
         * Endpoint
         * @description Create a new Subgenre row in the database.
         */
        post: operations["endpoint_v1_subgenres_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/subgenres/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Endpoint
         * @description Read a single Subgenre row from the database by its primary keys: ['id'].
         */
        get: operations["endpoint_v1_subgenres__id__get"];
        put?: never;
        post?: never;
        /**
         * Endpoint
         * @description Soft delete a Subgenre row from the database by its primary keys: ['id'].
         */
        delete: operations["endpoint_v1_subgenres__id__delete"];
        options?: never;
        head?: never;
        /**
         * Endpoint
         * @description Update an existing Subgenre row in the database by its primary keys: ['id'].
         */
        patch: operations["endpoint_v1_subgenres__id__patch"];
        trace?: never;
    };
    "/v1/releases": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Endpoint
         * @description Read multiple Release rows from the database with a limit and an offset.
         */
        get: operations["endpoint_v1_releases_get"];
        put?: never;
        /**
         * Endpoint
         * @description Create a new Release row in the database.
         */
        post: operations["endpoint_v1_releases_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/releases/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Endpoint
         * @description Read a single Release row from the database by its primary keys: ['id'].
         */
        get: operations["endpoint_v1_releases__id__get"];
        put?: never;
        post?: never;
        /**
         * Endpoint
         * @description Soft delete a Release row from the database by its primary keys: ['id'].
         */
        delete: operations["endpoint_v1_releases__id__delete"];
        options?: never;
        head?: never;
        /**
         * Endpoint
         * @description Update an existing Release row in the database by its primary keys: ['id'].
         */
        patch: operations["endpoint_v1_releases__id__patch"];
        trace?: never;
    };
    "/v1/labels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Endpoint
         * @description Read multiple Label rows from the database with a limit and an offset.
         */
        get: operations["endpoint_v1_labels_get"];
        put?: never;
        /**
         * Endpoint
         * @description Create a new Label row in the database.
         */
        post: operations["endpoint_v1_labels_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/labels/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Endpoint
         * @description Read a single Label row from the database by its primary keys: ['id'].
         */
        get: operations["endpoint_v1_labels__id__get"];
        put?: never;
        post?: never;
        /**
         * Endpoint
         * @description Soft delete a Label row from the database by its primary keys: ['id'].
         */
        delete: operations["endpoint_v1_labels__id__delete"];
        options?: never;
        head?: never;
        /**
         * Endpoint
         * @description Update an existing Label row in the database by its primary keys: ['id'].
         */
        patch: operations["endpoint_v1_labels__id__patch"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** ArtistCreate */
        ArtistCreate: {
            /**
             * Media Url
             * @description URL of the media associated with the post
             */
            media_url?: string | null;
            /**
             * Soundcharts Artist Id
             * Format: uuid
             * @description Soundcharts Artist UUID associated with the artist
             */
            soundcharts_artist_id?: string;
            /** Email */
            email: string;
            /**
             * Biography
             * @description Artist Biography
             */
            biography: string;
            /**
             * Apple Artist Link
             * @description Artist Apple URL
             * @default
             */
            apple_artist_link: string;
            /**
             * Beatport Artist Link
             * @description Artist Beatport URL
             * @default
             */
            beatport_artist_link: string;
            /**
             * Deezer Artist Link
             * @description Artist Deezer URL
             * @default
             */
            deezer_artist_link: string;
            /**
             * Tidal Artist Link
             * @description Artist Tidal URL
             * @default
             */
            tidal_artist_link: string;
            /**
             * Pandora Artist Link
             * @description Artist Pandora URL
             * @default
             */
            pandora_artist_link: string;
            /**
             * Shazam Artist Link
             * @description Artist Shazam URL
             * @default
             */
            shazam_artist_link: string;
            /**
             * Spotify Artist Link
             * @description Artist Spotify URI
             * @default
             */
            spotify_artist_link: string;
            /**
             * Youtube Channel Link
             * @description Artist YouTube URL
             * @default
             */
            youtube_channel_link: string;
            /**
             * Instagram Profile Link
             * @description Artist Instagram URL
             * @default
             */
            instagram_profile_link: string;
            /**
             * Facebook Profile Link
             * @description Artist Facebook URL
             * @default
             */
            facebook_profile_link: string;
            /**
             * X Profile Link
             * @description Artist X URL
             * @default
             */
            x_profile_link: string;
            /**
             * Tiktok Profile Link
             * @description Artist TikTok URL
             * @default
             */
            tiktok_profile_link: string;
            /**
             * Soundcloud Profile Link
             * @description Artist SoundCloud URL
             * @default
             */
            soundcloud_profile_link: string;
            /**
             * Songkick Profile Link
             * @description Artist SongKick URL
             * @default
             */
            songkick_profile_link: string;
            /**
             * Bandsintown Profile Link
             * @description Artist BandsInTown URL
             * @default
             */
            bandsintown_profile_link: string;
        };
        /** ArtistRead */
        ArtistRead: {
            /**
             * Created At
             * @description Timestamp for the creation of the record
             */
            created_at?: string | null;
            /**
             * Updated At
             * @description Timestamp for the last update of the record
             */
            updated_at?: string | null;
            /**
             * Org Id
             * @description Organization ID associated with the artist
             */
            org_id: string;
            /**
             * Id
             * Format: uuid
             * @description Unique identifier (UUID) for the record
             */
            id?: string;
            /**
             * Media Url
             * @description URL of the media associated with the post
             */
            media_url?: string | null;
            /**
             * Soundcharts Artist Id
             * Format: uuid
             * @description Soundcharts Artist UUID associated with the artist
             */
            soundcharts_artist_id?: string;
            /** Email */
            email: string;
            /**
             * Biography
             * @description Artist Biography
             */
            biography: string;
            /**
             * Apple Artist Link
             * @description Artist Apple URL
             * @default
             */
            apple_artist_link: string;
            /**
             * Beatport Artist Link
             * @description Artist Beatport URL
             * @default
             */
            beatport_artist_link: string;
            /**
             * Deezer Artist Link
             * @description Artist Deezer URL
             * @default
             */
            deezer_artist_link: string;
            /**
             * Tidal Artist Link
             * @description Artist Tidal URL
             * @default
             */
            tidal_artist_link: string;
            /**
             * Pandora Artist Link
             * @description Artist Pandora URL
             * @default
             */
            pandora_artist_link: string;
            /**
             * Shazam Artist Link
             * @description Artist Shazam URL
             * @default
             */
            shazam_artist_link: string;
            /**
             * Spotify Artist Link
             * @description Artist Spotify URI
             * @default
             */
            spotify_artist_link: string;
            /**
             * Youtube Channel Link
             * @description Artist YouTube URL
             * @default
             */
            youtube_channel_link: string;
            /**
             * Instagram Profile Link
             * @description Artist Instagram URL
             * @default
             */
            instagram_profile_link: string;
            /**
             * Facebook Profile Link
             * @description Artist Facebook URL
             * @default
             */
            facebook_profile_link: string;
            /**
             * X Profile Link
             * @description Artist X URL
             * @default
             */
            x_profile_link: string;
            /**
             * Tiktok Profile Link
             * @description Artist TikTok URL
             * @default
             */
            tiktok_profile_link: string;
            /**
             * Soundcloud Profile Link
             * @description Artist SoundCloud URL
             * @default
             */
            soundcloud_profile_link: string;
            /**
             * Songkick Profile Link
             * @description Artist SongKick URL
             * @default
             */
            songkick_profile_link: string;
            /**
             * Bandsintown Profile Link
             * @description Artist BandsInTown URL
             * @default
             */
            bandsintown_profile_link: string;
        };
        /** ArtistUpdate */
        ArtistUpdate: {
            /**
             * Media Url
             * @description URL of the media associated with the post
             */
            media_url?: string | null;
            /**
             * Soundcharts Artist Id
             * @description Soundcharts Artist UUID associated with the artist
             */
            soundcharts_artist_id?: string | null;
            /** Email */
            email?: string | null;
            /**
             * Biography
             * @description Artist Biography
             */
            biography?: string | null;
            /**
             * Apple Artist Link
             * @description Artist Apple URL
             */
            apple_artist_link?: string | null;
            /**
             * Beatport Artist Link
             * @description Artist Beatport URL
             */
            beatport_artist_link?: string | null;
            /**
             * Deezer Artist Link
             * @description Artist Deezer URL
             */
            deezer_artist_link?: string | null;
            /**
             * Tidal Artist Link
             * @description Artist Tidal URL
             */
            tidal_artist_link?: string | null;
            /**
             * Pandora Artist Link
             * @description Artist Pandora URL
             */
            pandora_artist_link?: string | null;
            /**
             * Shazam Artist Link
             * @description Artist Shazam URL
             */
            shazam_artist_link?: string | null;
            /**
             * Spotify Artist Link
             * @description Artist Spotify URI
             */
            spotify_artist_link?: string | null;
            /**
             * Youtube Channel Link
             * @description Artist YouTube URL
             */
            youtube_channel_link?: string | null;
            /**
             * Instagram Profile Link
             * @description Artist Instagram URL
             */
            instagram_profile_link?: string | null;
            /**
             * Facebook Profile Link
             * @description Artist Facebook URL
             */
            facebook_profile_link?: string | null;
            /**
             * X Profile Link
             * @description Artist X URL
             */
            x_profile_link?: string | null;
            /**
             * Tiktok Profile Link
             * @description Artist TikTok URL
             */
            tiktok_profile_link?: string | null;
            /**
             * Soundcloud Profile Link
             * @description Artist SoundCloud URL
             */
            soundcloud_profile_link?: string | null;
            /**
             * Songkick Profile Link
             * @description Artist SongKick URL
             */
            songkick_profile_link?: string | null;
            /**
             * Bandsintown Profile Link
             * @description Artist BandsInTown URL
             */
            bandsintown_profile_link?: string | null;
        };
        /** Body_login_for_access_token_v1_system_auth_login_post */
        Body_login_for_access_token_v1_system_auth_login_post: {
            /** Grant Type */
            grant_type: string;
            /** Username */
            username: string;
            /** Password */
            password: string;
            /**
             * Scope
             * @default
             */
            scope: string;
            /** Client Id */
            client_id?: string | null;
            /** Client Secret */
            client_secret?: string | null;
        };
        /** GenreCreate */
        GenreCreate: {
            /**
             * Genre Name
             * @description Genre Name
             */
            genre_name: string;
        };
        /** GenreUpdate */
        GenreUpdate: {
            /**
             * Genre Name
             * @description Genre Name
             */
            genre_name?: string | null;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** LabelCreate */
        LabelCreate: {
            /**
             * Label Name
             * @description Label Name
             */
            label_name: string;
            /**
             * Email
             * @description Label Email
             */
            email: string;
            /**
             * Biography
             * @description Label Biography
             */
            biography: string;
            /**
             * Established Year
             * @description Year the label was established
             */
            established_year: number;
        };
        /** LabelUpdate */
        LabelUpdate: {
            /**
             * Label Name
             * @description Label Name
             */
            label_name?: string | null;
            /**
             * Email
             * @description Label Email
             */
            email?: string | null;
            /**
             * Biography
             * @description Label Biography
             */
            biography?: string | null;
            /**
             * Established Year
             * @description Year the label was established
             */
            established_year?: number | null;
        };
        /** ReleaseCreate */
        ReleaseCreate: {
            /**
             * Release Name
             * @description Release Name
             */
            release_name: string;
        };
        /** ReleaseUpdate */
        ReleaseUpdate: {
            /**
             * Release Name
             * @description Release Name
             */
            release_name?: string | null;
        };
        /** SubgenreCreate */
        SubgenreCreate: {
            /**
             * Subgenre Name
             * @description Subgenre Name
             */
            subgenre_name: string;
        };
        /** SubgenreUpdate */
        SubgenreUpdate: {
            /**
             * Subgenre Name
             * @description Subgenre Name
             */
            subgenre_name?: string | null;
        };
        /** Token */
        Token: {
            /** Access Token */
            access_token: string;
            /** Token Type */
            token_type: string;
        };
        /** TrackCreate */
        TrackCreate: {
            /**
             * Media Url
             * @description URL of the media associated with the post
             */
            media_url?: string | null;
            /**
             * Isrc
             * @description Track ISRC
             */
            isrc: string;
            /**
             * Iswc
             * @description Track ISWC
             */
            iswc: string;
            /**
             * Track Name
             * @description Track Name
             */
            track_name: string;
            /**
             * Track Version
             * @description Track Version
             */
            track_version: string;
            /**
             * Birthdate
             * Format: date
             * @description Track Birthdate
             */
            birthdate: string;
            /**
             * Phone
             * @description Track Phone Number
             */
            phone: string;
            /**
             * Birth Location
             * @description Track Birth Location
             */
            birth_location: string;
            /**
             * Current Location
             * @description Track Current Location
             */
            current_location: string;
            /**
             * Track Biography
             * @description Track Biography
             */
            track_biography: string;
            /**
             * Track Website
             * @description Track Website
             */
            track_website: string;
            /**
             * Spotify Uri
             * @description Track Spotify URI
             */
            spotify_uri: string;
            /**
             * Apple Music Uri
             * @description Track Apple Music URI
             */
            apple_music_uri: string;
            /**
             * Youtube Url
             * @description Track YouTube URL
             */
            youtube_url: string;
            /**
             * Primary Genre Id
             * Format: uuid
             * @description Primary Genre ID
             */
            primary_genre_id: string;
            /**
             * Primary Subgenre Id
             * Format: uuid
             * @description Primary Subgenre ID
             */
            primary_subgenre_id: string;
        };
        /** TrackUpdate */
        TrackUpdate: {
            /**
             * Media Url
             * @description URL of the media associated with the post
             */
            media_url?: string | null;
            /**
             * Isrc
             * @description Track ISRC
             */
            isrc?: string | null;
            /**
             * Iswc
             * @description Track ISWC
             */
            iswc?: string | null;
            /**
             * Track Name
             * @description Track Name
             */
            track_name?: string | null;
            /**
             * Track Version
             * @description Track Version
             */
            track_version?: string | null;
            /**
             * Birthdate
             * @description Track Birthdate
             */
            birthdate?: string | null;
            /**
             * Phone
             * @description Track Phone Number
             */
            phone?: string | null;
            /**
             * Birth Location
             * @description Track Birth Location
             */
            birth_location?: string | null;
            /**
             * Current Location
             * @description Track Current Location
             */
            current_location?: string | null;
            /**
             * Track Biography
             * @description Track Biography
             */
            track_biography?: string | null;
            /**
             * Track Website
             * @description Track Website
             */
            track_website?: string | null;
            /**
             * Spotify Uri
             * @description Track Spotify URI
             */
            spotify_uri?: string | null;
            /**
             * Apple Music Uri
             * @description Track Apple Music URI
             */
            apple_music_uri?: string | null;
            /**
             * Youtube Url
             * @description Track YouTube URL
             */
            youtube_url?: string | null;
            /**
             * Primary Genre Id
             * @description Primary Genre ID
             */
            primary_genre_id?: string | null;
            /**
             * Primary Subgenre Id
             * @description Primary Subgenre ID
             */
            primary_subgenre_id?: string | null;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    login_for_access_token_v1_system_auth_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["Body_login_for_access_token_v1_system_auth_login_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Token"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    refresh_access_token_v1_system_auth_refresh_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
        };
    };
    logout_v1_system_auth_logout_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
        };
    };
    endpoint_v1_artists_get: {
        parameters: {
            query?: {
                /** @description Page number */
                page?: number | null;
                /** @description Number of items per page */
                itemsPerPage?: number | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_artists_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ArtistCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_artist_v1_artists__org_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ArtistRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_artists__org_id___id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_artists__org_id___id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_artists__org_id___id__patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ArtistUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_tracks_get: {
        parameters: {
            query?: {
                /** @description Page number */
                page?: number | null;
                /** @description Number of items per page */
                itemsPerPage?: number | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_tracks_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TrackCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_tracks__id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_tracks__id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_tracks__id__patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TrackUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_genres_get: {
        parameters: {
            query?: {
                /** @description Page number */
                page?: number | null;
                /** @description Number of items per page */
                itemsPerPage?: number | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_genres_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GenreCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_genres__id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_genres__id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_genres__id__patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GenreUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_subgenres_get: {
        parameters: {
            query?: {
                /** @description Page number */
                page?: number | null;
                /** @description Number of items per page */
                itemsPerPage?: number | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_subgenres_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SubgenreCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_subgenres__id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_subgenres__id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_subgenres__id__patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SubgenreUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_releases_get: {
        parameters: {
            query?: {
                /** @description Page number */
                page?: number | null;
                /** @description Number of items per page */
                itemsPerPage?: number | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_releases_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ReleaseCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_releases__id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_releases__id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_releases__id__patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ReleaseUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_labels_get: {
        parameters: {
            query?: {
                /** @description Page number */
                page?: number | null;
                /** @description Number of items per page */
                itemsPerPage?: number | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_labels_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LabelCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_labels__id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_labels__id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    endpoint_v1_labels__id__patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LabelUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
